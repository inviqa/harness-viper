apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.resourcePrefix }}viper-gateway
  labels:
    app.service: {{ .Values.resourcePrefix }}viper-gateway
  annotations:
    argocd.argoproj.io/sync-wave: "15"
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app.service: {{ .Values.resourcePrefix }}viper-gateway
  template:
    metadata:
      labels:
        app.service: {{ .Values.resourcePrefix }}viper-gateway
    spec:
      containers:
      - name: viper-gateway
        env:
        {{- range $key, $value := .Values.gateway.environment }}
        {{- $tp := typeOf $value }}
        - name: {{ $key | quote }}
        {{- if eq $tp "string" }}
          value: {{ tpl $value $ | quote }}
        {{- else}}
          value: {{ $value | quote }}
        {{- end }}
        {{- end }}
        {{- if .Values.gateway.environment_secrets }}
        envFrom:
          - secretRef:
              name: {{ .Values.resourcePrefix }}gateway
        {{- end }}
        image: {{ .Values.gateway.docker.image }}
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 80
        resources:
          limits:
            memory: {{ .Values.gateway.docker.resources.memory }}
          requests:
            memory: {{ .Values.gateway.docker.resources.memory }}
        readinessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
{{- if .Values.docker.image_pull_config }}
      imagePullSecrets:
      - name: {{ .Values.resourcePrefix }}image-pull-config
{{- end }}
      restartPolicy: Always
      enableServiceLinks: false
status: {}
