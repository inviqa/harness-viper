{% set blocks = 'application/skeleton/_twig/README.md/' %}
# {{ @('workspace.name') }}

Please follow the below steps to get started, if you encounter any issues installing the dependencies or provisioning the development environment, please check the [Common Issues](#common-issues) section first.

## Development Environment

### Getting Started

#### Prerequisites

##### General

- Access to LastPass folders
  - `Shared-{{ @('workspace.name') }}-Servers` and `Shared-{{ @('workspace.name') }}-Accounts`

##### Docker

- A working Docker setup
  - On MacOS, use [Docker for Mac](https://docs.docker.com/docker-for-mac/install/).
  - On Linux, add the official Docker repository and install the "docker-ce" package.
    You will also need to have a recent [docker-compose](https://docs.docker.com/compose/install/) version - at least `1.24.0`.

#### Setup

1. Install [workspace](https://github.com/my127/workspace)
2. Copy the LastPass entry "{{ @('workspace.name') }}: Development Environment Key" to a new blank file named `workspace.override.yml` in the project root.
3. Run `ws install`

Once installed, the site should be available at [https://{{ @('hostname') }}](https://{{ @('hostname') }}).

### Development environment cleanup

To stop the development environment, run `ws disable`.

To start the development environment again, run `ws enable`.

To remove the development environment, run `ws destroy`.

### Frontend

`ws install` will build and start docker containers. It's optional if you are able
to run the node development server on your computer directly.

For development mode it's expected that `yarn dev` starts up a development
node server that serves static assets

For pipeline and production modes, it's expected that `yarn build` will build
distribution artifacts in the ./build directory. This will then be copied into
an nginx image to serve the assets staticly.

### Performance on MacOS

For optimal performance without using a synchronize mount, Yarn v2 can be used to minimize
the number of files being watched and/or synchronized.

Page load times with Docker for Mac can vary considerably. This is especially so when there is a large
quantity of small files, such as with a large composer vendor folder.

[Mutagen](https://mutagen.io/documentation/transports/docker) is a tool to synchronize files between host machine
and docker containers, just like docker-sync. We have integrated mutagen for synchronizing files as an option of docker-sync.
{% if @('mutagen') == 'yes' %}
This tool is still in beta phase but we have enabled it instead of docker-sync on this project. You can switch to
docker-sync if you are not happy with mutagen.
{% endif %}
Following are some useful commands regarding Mutagen.

```bash
# To switch to Mutagen file sync
ws switch mutagen
# To switch back to cached volumes
ws switch cached-volumes
# To check the Mutagen sync status (sync is ready when status is "Watching for changes")
mutagen monitor
# To debug an errored sync
mutagen list
```

### Common Issues

As setup issues are encountered please detail with step by step fix instructions, and where possible update the project or the upstream workspace harness itself to provide a more permanent fix.

# License

Copyright 2021, Inviqa
